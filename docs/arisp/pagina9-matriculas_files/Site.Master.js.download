var orgShow = $.fn.show;
$.fn.show = function () {
    $(this).trigger('onShowCallback');
    orgShow.apply(this, arguments);
    return this;
}

//$.fn.scrollTo = function (elem, speed) {
//    $(this).animate({
//        scrollTop: $(this).scrollTop() - $(this).offset().top + $(elem).offset().top
//    }, speed == undefined ? 1000 : speed);
//    return this;
//};

$.fn.scrollTo = function (elem, speed) {
    var offset_element = 0;

    offset_element = $(elem).offset().top;

    $(this).animate({
        scrollTop: $(this).scrollTop() - $(this).position() + offset_element
    }, speed == undefined ? 1000 : speed);
    return this;
};

$.fn.validaEmails = function (elem, speed) {
    var valid = true;
    var emails = $(this).val().split(";");

    jQuery.each(emails, function () {
        if (jQuery.trim(this) != '') {
            if (!jQuery.trim(this).match(/^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$/i))
                valid = false;
        }
    });

    return valid;
};

$.fn.reverse = [].reverse;

jQuery.fn.extend({
    scrollToMe: function () {
        var x = jQuery(this).offset().top - 100;
        jQuery('html,body').animate({ scrollTop: x }, 400);
    } 
});

$(function () {

    //Get our elements for faster access and set overlay width
    var div = $('div#menucontainer'),
        divmenus = div.find(".submenu");
    //Get menu width
    var divWidth = div.width();
    //Remove scrollbars
    div.css({ overflow: 'hidden' });

    //When user move mouse over menu
    divmenus.mousemove(function (e) {
        var adjustOffsets = [0, 0];
        if (jQuery.browser.version <= 7.0) { adjustOffsets = [28, 75]; }

        var ulWidth = ($('.submenu').length * 130) + adjustOffsets[0];
        var left = (e.pageX - div.offset().left) * (ulWidth - divWidth) / divWidth;

        if ($(e.currentTarget).attr("class").indexOf("first") > -1) div.scrollLeft(0);
        else if ($(e.currentTarget).attr("class").indexOf("last") > -1) div.scrollLeft(ulWidth);
        else div.scrollLeft(left);

        try {
            var newOffsetLeft = $(e.currentTarget).find('ul.menu').offset().left + 40; //40 = ELIMINAR A MARGEM DO HOVER CSS
            $("#submenucontainer ul.menu").css("left", newOffsetLeft - adjustOffsets[1]);
        } catch (e) { }
    });

    var menu = $('.submenu');
    menu.hover(
                function () {
                    try {
                        $("#submenucontainer").html($(this).find('ul.menu').clone());
                        $("#submenucontainer ul.menu").css("position", "fixed");
                        $("#submenucontainer ul.menu").mouseleave(function () {
                            $("#submenucontainer").html("");
                        });
                    } catch (e) { }
                },
                function () { }
            );

    $("#main").mouseenter(function () {
        $("#submenucontainer").html("");
    });
    $("#submenucontainer").mouseleave(function () {
        $("#submenucontainer").html("");
    });

    $(".menu").hover(function () {
        $(this).parent().addClass("active");
    }, function () {
        $(this).parent().removeClass("active");
    });

    $("input[type='text']").wrap("<div class='material-input-text'></div>");
    $(".material-input-text").focusin(function () {
        $(this).addClass("toggled");
    });
    $(".material-input-text").focusout(function () {
        $(this).removeClass("toggled");
    });

    $('.money').maskMoney({ allowNegative: true, thousands: '.', decimal: ',' });
    $('.money[value="0,00"]').val("");

    $('.hour')
        .mask('00:00:00', { reverse: false });

    

    $('.datetime').attr("readonly", "readonly");
    $('.datetime[value="01/01/0001 00:00:00"]').val("");

    $("*[type='button'].disableAfter").live("click", function () {
        $(this).attr("disabled", "disabled");
        $(this).addClass("disabled");
    });

    $(window).resize(function () {
        ArispStylesViewportHeightSet();
    });

    ArispStylesViewportHeightSet();
});

function ArispStylesViewportHeightSet() {
    //    var viewportHeight = $(window).height();
    //    var fixedElementsHeight = $("#header").height();

    //    $("#main").css("height", viewportHeight - fixedElementsHeight - 45); //45px from padding-top + padding-bottom
    //    $("#content").css("height", $("#main").height() - 50);
    return;
}

$.fn.serializeObjectIntoJson = function () {
    var mensagemIN = {};
    var a = this.serializeArray();
    $.each(a, function () {
        if (mensagemIN[this.name] !== undefined) {
            if (!mensagemIN[this.name].push) {
                mensagemIN[this.name] = [mensagemIN[this.name]];
            }
            mensagemIN[this.name].push(this.value || '');
        } else {
            mensagemIN[this.name] = this.value || '';
        }
    });
    return mensagemIN;
};

$.fn.enableTodayDatePicker = function (pickerInitial, pickerFinal) {
    $(this).change(function () {
        if ($(this).is(":checked")) {
            var fullDate = new Date();
            var twoDigitMonth = eval(fullDate.getMonth()) + 1;
            if (twoDigitMonth.toString().length == 1) twoDigitMonth = "0" + twoDigitMonth;
            var twoDigitDate = fullDate.getDate();
            if (twoDigitDate.toString().length == 1) twoDigitDate = "0" + twoDigitDate;

            var currentDate = twoDigitDate + "/" + twoDigitMonth + "/" + fullDate.getFullYear();
            console.log(currentDate);
            $(pickerInitial).val(currentDate);
            $(pickerFinal).val(currentDate);
            $(this).attr("checked", returnVal);
        }
        $(this).val($(this).is(':checked'));
    });
};

//Handler de ajax com animação de loading, usando POST.
function AjaxPost(_url, _params, _callback) {
    var callback = _callback;
    if (!callback) callback = function (data) {
        $("#main").html($(data).find("#main").html());
    };
    
    var ajaxCallback = function (data) {
        DestroyLoading();
        callback(data);
        if (typeof AttachHandlers != "undefined" && AttachHandlers) AttachHandlers();
        ArispStylesViewportHeightSet();
    };

    ShowLoading();
    $.ajax({
        traditional: true,
        url: _url,
        type: "POST",
        async: true,
        data: _params,
        success: ajaxCallback,
        error: function () { DestroyLoading(); alert("Não foi possível processar a solicitação. Se o problema persistir, entre em contato com a Arisp."); }
    });
}

//Função usada para carregamento de uma página via ajax, dentro de uma popup aberta na página.
function AjaxPopup(_idPopup, _url, _params, _callback) {
    $.ajax({
        traditional: true,
        url: _url,
        type: "POST",
        async: true,
        data: _params,
        success: function (data) {
            $(_idPopup).html(data);
            if (_callback) _callback(data);
        },
        error: function () { alert("Não foi possível processar a solicitação. Se o problema persistir, entre em contato com a Arisp."); }
    });
}

//Função usada para carregamento de módulo do menu.
var lastChargedMenuPopup = "";
function OpenMenuPopup(_url) {
    AjaxPost(_url, null, function (data) {
        if (data.indexOf("ERRO;") >= 0) alert(data.split(';')[1]);
        else {
            if (lastChargedMenuPopup != "") $("#" + lastChargedMenuPopup).remove();
            $("#boxes").append(data);
            var id = $("#boxes").children().last()[0].id;
            lastChargedMenuPopup = id;
            OpenPopup("#" + id);
        }
    });
    $('#mask').unbind("click");
    $('#mask').click(function () {
        ClosePopup();
    });
}

//Carregar uma página usando POST.
function LoadPage(_url, _params) {
    $("form[name=formJQuery]").remove();
    var jForm = $("<form name='formJQuery' action='" + _url + "' method='post' style='display:none;'></form>");
    if (_params) {
        for (var i = 0; i < _params.length; ++i) {
            jForm.append("<input type='hidden' id='" + _params[i][0] + "' name='" + _params[i][0] + "' value='" + _params[i][1] + "' />");
        }
    }
    jForm.append("<input type='submit' value='submit' />");
    jForm.appendTo('body').submit();
}

function BaixaPagamento(_url, _params) {
    if (confirm("Tem certeza que deseja dar baixa neste pagamento?")) {
        LoadPage(_url, _params);
    }
}

function ExcluirRegistro(_url, _params) {
    if (confirm("Tem certeza que deseja excluir este registro e todas as entidades vinculadas?")) {
        LoadPage(_url, _params);
    }
}

function AtivarRegistro(_url, activate, _params) {
    var action = "desativar";
    if (activate) action = "ativar";

    if (confirm("Tem certeza que deseja " + action + " este objeto?")) {
        LoadPage(_url, _params);
    }
}

function verificaData(Data) {
    Data = Data.substring(0, 10);

    var dma = -1;
    var data = Array(3);
    var ch = Data.charAt(0);
    for (i = 0; i < Data.length && ((ch >= '0' && ch <= '9') || (ch == '/' && i != 0)); ) {
        data[++dma] = '';
        if (ch != '/' && i != 0) return false;
        if (i != 0) ch = Data.charAt(++i);
        if (ch == '0') ch = Data.charAt(++i);
        while (ch >= '0' && ch <= '9') {
            data[dma] += ch;
            ch = Data.charAt(++i);
        }
    }
    if (ch != '') return false;
    if (data[0] == '' || isNaN(data[0]) || parseInt(data[0]) < 1) return false;
    if (data[1] == '' || isNaN(data[1]) || parseInt(data[1]) < 1 || parseInt(data[1]) > 12) return false;
    if (data[2] == '' || isNaN(data[2]) || ((parseInt(data[2]) < 0 || parseInt(data[2]) > 99) && (parseInt(data[2]) < 1900 || parseInt(data[2]) > 9999))) return false;
    if (data[2] < 50) data[2] = parseInt(data[2]) + 2000;
    else if (data[2] < 100) data[2] = parseInt(data[2]) + 1900;
    switch (parseInt(data[1])) {
        case 2: { if (((parseInt(data[2]) % 4 != 0 || (parseInt(data[2]) % 100 == 0 && parseInt(data[2]) % 400 != 0)) && parseInt(data[0]) > 28) || parseInt(data[0]) > 29) return false; break; }
        case 4: case 6: case 9: case 11: { if (parseInt(data[0]) > 30) return false; break; }
        default: { if (parseInt(data[0]) > 31) return false; }
    }
    return true;

} 
function GetDatepickerForElement(names, maxDateParams) {
	var maxDateIni = 0, maxDateLast = 0;
	if (maxDateParams)
	{
		maxDateIni = maxDateParams[0];
		maxDateLast = maxDateParams[1];
		minDateIni = maxDateParams[2];
	}
	
    if (names.length > 1) {
        $(names[0]).datepicker({ changeMonth: true, changeYear: true, maxDate: maxDateIni,
            onSelect: function (dateText) {
                $(names[1]).datepicker("option", "minDate", dateText);
            },
            beforeShow: function () {
                setTimeout(function () {
                    $('.ui-datepicker').css('z-index', 999999);
                }, 0);
            }
        });
		$(names[1]).datepicker({ changeMonth: true, changeYear: true,
			minDate: $(names[0]).val(),
			maxDate: maxDateLast,
			beforeShow: function () {
			    setTimeout(function () {
			        $('.ui-datepicker').css('z-index', 999999);
			    }, 0);
			}
		});
    }
    else {
        if (maxDateParams == undefined) { minDateIni = 0 };
        $(names[0]).datepicker({ changeMonth: true, changeYear: true, minDate: minDateIni, maxDate: maxDateIni,
            beforeShow: function () {
                setTimeout(function () {
                    $('.ui-datepicker').css('z-index', 999999);
                }, 0);
            } 
        });
    }
}

jQuery.fn.center = function () {
    var el = $(this[0]);
    el.css("display", "block");
    el.css("margin-left", "auto");
    el.css("margin-right", "auto");
    return el;
};

jQuery.fn.onlyNumbers = function () {
    var elements = this;
    for (var i = 0; i < elements.length; i++) {
        var el = $(elements[i]);
        el.keypress(function (event) {
            var keyPressed = event.keyCode ? event.keyCode : event.which ? event.which : event.charCode;
            if ((keyPressed > 31 && keyPressed < 48) || (keyPressed > 57 && keyPressed < 127)) event.preventDefault();
            return;
        });
    }
    return elements;
};

jQuery.fn.onlyCharacters = function () {
    var elements = this;
    for (var i = 0; i < elements.length; i++) {
        var el = $(elements[i]);
        el.keypress(function (event) {
            var keyPressed = event.keyCode ? event.keyCode : event.which ? event.which : event.charCode;
            if ((keyPressed >= 48 && keyPressed <= 57)) event.preventDefault();
            return;
        });
    }
    return elements;
};

jQuery.fn.blockSpecialCharacteres = function () {
    var elements = this;
    for (var i = 0; i < elements.length; i++) {
        var el = $(elements[i]);
        el.keypress(function (event) {
            var keyPressed = event.keyCode ? event.keyCode : event.which ? event.which : event.charCode;
            //if ((keyPressed > 31 && keyPressed < 48) || (keyPressed > 57 && keyPressed < 65) || (keyPressed > 90 && keyPressed < 97) || (keyPressed > 122 && keyPressed < 127)) event.preventDefault();
            var specialChars = "!@#$%^&*()+=-_´`~[]\\\';,./{}|\":<>?¨¬¹²³£¢§ªº°/";
            var character = String.fromCharCode(keyPressed).toLowerCase();
            if (specialChars.indexOf(character) > -1 || keyPressed > 127) event.preventDefault();
            return;
        });
    }
    return elements;
};

jQuery.fn.onlyCharacters = function () {
    var elements = this;
    for (var i = 0; i < elements.length; i++) {
        var el = $(elements[i]);
        el.keypress(function (event) {
            var keyPressed = event.keyCode ? event.keyCode : event.which ? event.which : event.charCode;
            if ((keyPressed >= 48 && keyPressed <= 57)) event.preventDefault(); ;
            return;
        });
    }
    return elements;
};

jQuery.fn.validateHour = function () {
    var el = $(this[0]);
    var regExp = /^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/;
    if (el.val().length > 0) return regExp.test(el.val());
    else return false;
};

Date.prototype.adjustDate = function (days) {
    var date;
    days = days || 0;

    if (days === 0) {
        date = new Date(this.getTime());
    } else if (days > 0) {
        date = new Date(this.getTime());
        date.setDate(date.getDate() + days);
    } else {
        date = new Date(
            this.getFullYear(),
            this.getMonth(),
            this.getDate() - Math.abs(days),
            this.getHours(),
            this.getMinutes(),
            this.getSeconds(),
            this.getMilliseconds()
        );
    }

    this.setTime(date.getTime());

    return this;
};

function ShowLoading(e) {
    var maskHeight = $(document).height();
    var maskWidth = $(window).width();
    $('#mask').css({ 'width': maskWidth, 'height': maskHeight });

    var idDivLoading = "loading";
    var div = "<div id='" + idDivLoading + "'><img src='/Content/Images/loading.svg'></div>";
    $("body").append(div);
    $("body").addClass('hidden-y-overflow');

    var winH = $(window).height();
    var winW = $(window).width();
    $("#" + idDivLoading).css('top', winH / 2 - $("#" + idDivLoading).height() / 2);
    $("#" + idDivLoading).css('left', winW / 2 - $("#" + idDivLoading).width() / 2);

    $('#mask').fadeTo("slow", 0.8);
    $("#" + idDivLoading).fadeIn(1000);
    
    $(document).on("mousedown", "selector", function(e){
       if(e.which == 2){
           e.preventDefault();
           return false;
       } 
    });
}

function DestroyLoading(onlyLoading) {
    if (!onlyLoading) $("#mask").hide();
    $("#loading").remove();
    $("body").removeClass('hidden-y-overflow');
}

function OpenPopup(id) {
    var maskHeight = $(document).height();
    var maskWidth = $(window).width();
    $('#mask').css({ 'width': maskWidth, 'height': maskHeight });

    var winH = $(window).height();
    var winW = $(window).width();
    $(id).css('top', winH / 2 - $(id).height() / 2);
    $(id).css('left', winW / 2 - $(id).width() / 2);

    $('#mask').fadeTo("slow", 0.8);
    $(id).fadeIn(1000);
}

function CreatePopups() {
    $('button[name=modal]').unbind("click");
    $('button[name=modal]').click(function (e) {
        e.preventDefault();

        var id = $(this).attr('value');
        OpenPopup(id);
        $(id).modal('show');
    });

    $('#mask').unbind("click");
    $('#mask').click(function () {
        ClosePopup();
    });
}

function ClosePopup() {
    $('#mask,.window,.modal-backdrop').hide();
}

function FormatBlankPrintPopup(innerHtml, titulo) {
    var html = '<!DOCTYPE html>';
    html += '<html>';
    html += '<head runat="server">';
    html += '<title>IMPRESSÃO - OFÍCIO ELETRÔNICO</title>';
    html += '<link href="https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800" rel="stylesheet" type="text/css" />';
    html += '<style type="text/css">';
    html += 'body { font-size: .75em; font-family: Open Sans, Verdana, Helvetica, Sans-Serif; padding: 10px 10px 10px 20px; color: #696969; }';
    html += '.subpanel { border:1px solid #becbbe; margin-bottom: 15px; padding: 10px; }';
    html += 'table { border: solid #becbbe !important; border-width:1px 0 0 1px !important; }';
    html += 'th, td {  margin: 0; border: solid #becbbe !important; border-width:0 1px 1px 0 !important; font-size: .75em; font-family: Open Sans, Verdana, Helvetica, Sans-Serif; }';
    html += 'div p { width:100%; }';
    html += 'label { display: block; font-weight: bold; }';
    html += '</style>';
    html += '</head>';
    html += '<body>';
    html += '<p style="font-size:13px;font-family: Open Sans;">OFÍCIO <b>ELETRÔNICO</b></p>';
    if (typeof titulo == "string") html += '<h4>' + titulo + '</h4>';
    html += innerHtml;
    html += '</body>';
    html += '</html>';

    return html;
}

function checkQSFieldValue(field) {
    var url = window.location.href;
    if (url.indexOf('?' + field + '=1') != -1)
        return true;
    else if (url.indexOf('&' + field + '=1') != -1)
        return true;

    return false;
}

function checkQSField(field) {
    var url = window.location.href;
    if (url.indexOf('?' + field + '=') != -1)
        return true;
    else if (url.indexOf('&' + field + '=') != -1)
        return true;

    return false;
}


function ValidaCPF(cpf) {
    var numeros, digitos, soma, i, resultado;

    if (cpf.length < 11)
        return false;

    var digitos_iguais = 1;
    for (i = 0; i < cpf.length - 1; i++) {
        if (cpf.charAt(i) != cpf.charAt(i + 1)) {
            digitos_iguais = 0;
            break;
        }
    }

    if (!digitos_iguais) {
        numeros = cpf.substring(0, 9);
        digitos = cpf.substring(9);
        soma = 0;
        for (i = 10; i > 1; i--)
            soma += numeros.charAt(10 - i) * i;
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(0))
            return false;
        numeros = cpf.substring(0, 10);
        soma = 0;
        for (i = 11; i > 1; i--)
            soma += numeros.charAt(11 - i) * i;
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(1))
            return false;
        return true;
    }
    else
        return false;
}


function ValidaCNPJ(cnpj) {
    var numeros, digitos, soma, i, resultado, pos, tamanho;
    
    if (cnpj.length < 14 && cnpj.length < 15)
        return false;

    var digitos_iguais = 1;
    for (i = 0; i < cnpj.length - 1; i++) {
        if (cnpj.charAt(i) != cnpj.charAt(i + 1)) {
            digitos_iguais = 0;
            break;
        }
    }

    if (!digitos_iguais) {
        tamanho = cnpj.length - 2
        numeros = cnpj.substring(0, tamanho);
        digitos = cnpj.substring(tamanho);
        soma = 0;
        pos = tamanho - 7;
        for (i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(0))
            return false;
        tamanho = tamanho + 1;
        numeros = cnpj.substring(0, tamanho);
        soma = 0;
        pos = tamanho - 7;
        for (i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(1))
            return false;
        return true;
    }
    else
        return false;
}

function BindComboOnChange(idParent, idHandled, urlAction, showBlank, parameters, idContainerElements) {

    if (idContainerElements != null) idContainerElements = "#" + idContainerElements + " ";
    else idContainerElements = "";

    $(idContainerElements + "#" + idParent).bind("change", function () {

        $(idContainerElements + "#" + idHandled).html("<option value='0'>Carregando...</option>");

        var data = {};
        if (parameters != null) data = parameters;
        data["idParent"] = $(idContainerElements + "#" + idParent + " option:selected").val();

        $.get(urlAction, data, function (data) {

            $(idContainerElements + "#" + idHandled).html("");
            if (showBlank) $(idContainerElements + "#" + idHandled).html("<option value='0'>Selecione...</option>");

            for (var i = 0; i < data.length; i++) {
                $(idContainerElements + "#" + idHandled).append("<option value='" + data[i].Value + "'>" + data[i].Text + "</option>");
            }

        });
    });
}

function BindFunctionOnComboClick(idHandled, valueToBind, callback) {
    $("#" + idHandled).bind("change", function () {
        if ($(this).find("option:selected").val().indexOf(valueToBind) > -1) {
            callback();
        }
    });
}

function BindCapitalOnSelect(ids, idComboEstado, idCampoCidade, callback) {
    $(ids).live("change", function () {
        var sender = this;
        var prefixoCampo = sender.id.replace('Capital', '');
        if ($(this).find("option:selected").val() == 1) {
            $.post('CarregarCapitalEstado',
                { IDEstado: $("#" + prefixoCampo + idComboEstado + " option:selected").val() },
                function (data) {
                    if (data.length > 0) {
                        //Atualizar campo de cidade com o valor correspondente à capital e desabilitar campo.
                        $("#" + prefixoCampo + idCampoCidade).val(data).prop("readonly", true);
                    } else $("#" + prefixoCampo + idCampoCidade).val("").prop("readonly", false);

                    if (callback) callback(sender);
                });
        } else {
            $("#" + prefixoCampo + idCampoCidade).val("").prop("readonly", false);
            if (callback) callback(sender);
        }
    });
}

$.fn.extend({
    uploadifyInternal: function (allowMultiple, allowedExtensions, callbackQueueComplete) {
        $(this).uploadify({
            'swf': '/Content/uploadify.swf',
            'uploader': '/Home/UploadFlash',
            'fileTypeExts': allowedExtensions,
            'buttonText': 'SELECIONAR ARQUIVO',
            'fileSizeLimit': '0',
            'width': 200,
            'multi': allowMultiple,
            'onDialogOpen': function () {
                fileErrors = [];
            },
            'onSelect': function (file) {
                if (validation != null) {
                    if (!validation.test(file.name)) {
                        $("#CaminhoArquivoFlash").uploadify('cancel', '*');
                        alert('Formato de arquivo inválido!');
                        return false;
                    }
                }
            },
            'onUploadSuccess': function (file, data, response) {
                //Se retornou erro na função de upload...
                if (data.search("erro=") > -1) {
                    $("#CaminhoArquivoFlash").uploadify('cancel', '*');
                    alert('Não foi possível importar o arquivo, tente novamente. Caso o problema persista, entre em contato com a Arisp.');
                    document.getElementById("hidIDAnexo").value = "0";
                    return false;
                }

                //Se não retornou erro...
                if (!document.getElementById("hidIDAnexo").value == "") document.getElementById("hidIDAnexo").value += ",";
                document.getElementById("hidIDAnexo").value += data;
            },
            'onUploadError': function (file, errorCode, errorMsg, errorString) {
                //Ele retorna erro se o upload tiver sido cancelado com o $("#file_upload").uploadify('cancel','*');
                //Essa condicional evita esse erro.
                if (!errorMsg == -280) {
                    $("#CaminhoArquivoFlash").uploadify('cancel', '*');
                    alert('Não foi possível importar o arquivo, tente novamente. Caso o problema persista, entre em contato com a Arisp.');
                    return false;
                }
            },
            'onQueueComplete': function (queueData) {
                //Se não ocorreu erro submete o formulário
                if (queueData.uploadsErrored == 0) {
                    if (callbackQueueComplete) callbackQueueComplete();
                }
            }
        });
    }
});

function DisableDropConditional(idDropDown, idInformado) {
    if (idInformado > 0) {
        $("#" + idDropDown + " option[value=" + idInformado + "]").prop("selected", true)
            .parent().prop("disabled", true);
    }
}

function showPanelAndHideOthers(idPanel) {
    $(".contentEditor").hide();

    $("#" + idPanel).fadeIn('slow');
    $(".service-details").each(function () {
        var currentElement = $(this);
        if (currentElement.css('display') != 'none') {
            $("#getTitletext a").text(currentElement.find("h4").text());
        }
    });

}

$.fn.extend({
    validarFeriadoFDS: function (callback) {
        $.getJSON("/ValidarFeriadoFDS", { data: $(this).val() }, function (r) {
            if (r.Codigo < 0) alert(r.Mensagem);
            else {
                var data = null;

                if (r.Codigo < 10) {
                    alert(r.Mensagem);
                    data = r.Data;
                }
                else data = r.Data[0];

                callback(data);
            }
        });
    }
});

$(document).ready(function () {
    //$(".show-menu").click(function () { //Menu responsivo
    //    $(".main-nav").slideToggle();
    //    $(this).toggleClass("hide-menu");
    //});

    $(".main-nav .submenu-wrap").each(function (index) {
        $(this).addClass("item-" + index); 
    });

    $(".main-nav .submenu-wrap").hover(function () {
        $(this).closest('.submenu').addClass("active-link");
    }, function () {
        $(this).closest('.submenu').removeClass("active-link");
    });

    function slideWrap() { //Função para chamar box de formulário de contato
        $("#pesquisa-dados").css("left", "-100%");
        setTimeout(function () {
            $("#pesquisa-dados").css("left", "0");
        }, 500);
    }

    $(".link-side-access").click(function (e) {
        slideWrap();
        $("#dados-content").load($(this).attr("href"));
        return false;
        e.preventDefault();
    });

    $(".close-bar").click(function () {
        $("#pesquisa-dados").css("left", "-100%");
    });

    $(".close-wrap").click(function () {
        $(this).toggleClass("active");
        $(".side-nav-options").toggleClass("disable");
    });

    $("#chat-popup-acess").click(function event() {
        $(".popup-chat").colorbox({ iframe: true, width: "40%", height: "70%" });
        setTimeout(function () {
            $(".side-call-button").removeClass("active");
        }, 1000);
    });

    $(".side-call-button .title").click(function (e) {
        $(".side-call-button").toggleClass("active");
        e.preventDefault();
    });

    $(".close").click(function () {
        $(".side-call-button").removeClass("active");
    });

    $(document).bind('keypress', function (e) {
        if (e.keyCode == 13) {
            $('.filter-btn').trigger('click');
        }
    });

    /*if ($(window).width() <= 767) {
        $(".submenu>a").click(function (e) {
            $(this).siblings('.menu').slideToggle('fast');
            $('.menu').not($(this).siblings('.menu')).slideUp('fast');
            e.preventDefault();
        });

        $("#carousel-logos").owlCarousel({
            items: 2,
            autoPlay: true,
            pagination: false
        });
    } else {
        $(".others-logos").removeClass("owl-carousel");
    }*/

    $.tablesorter.addParser({
        // set a unique id 
        id: 'thousands',
        is: function (s) {
            // return false so this parser is not auto detected 
            return false;
        },
        format: function (s) {
            // format your data for normalization 
            return s.replace('R$ ', '').replace(/,/g, '').replace(/\./g, '');
        },
        // set type, either numeric or text 
        type: 'numeric'
    }); 
});

function VerificarSessaoUsuario() {
    $.post("/Home/RefreshSession", function () {
        setTimeout(function () { VerificarSessaoUsuario(); }, 3660000); //1 minuto = 60000 ; 2 minutos = 120000 milissegundos; 30minutos 1800000; 3600000 = 1h
    });
}

